@import "colors";
@import "modifiers";
@import "sizes";
@import "responsive";

/* Colors */

$colors: (
        grey-100: $grey-100,
        grey-200: $grey-200,
        grey-300: $grey-300,
        grey-400: $grey-400,
        grey-500: $grey-500,
        grey-600: $grey-600,
        grey-700: $grey-700,
        grey-800: $grey-800,
        grey-900: $grey-900,
        light: $light,
        dark: $dark,
        primary-100: $primary-100,
        primary-200: $primary-200,
        primary-300: $primary-300,
        primary-500: $primary-500,
        primary-700: $primary-700,
        primary-900: $primary-900,
        primary: $primary-500,
        red: $red,
        red-background: $red-background,
);

@each $class, $color in $colors {
  .text-#{$class} {
    color: $color !important;
  }

  .bg-#{$class} {
    background-color: $color !important;
  }

  .border-#{$class} {
    border-color: $color !important;
  }
}

.text-border {
  border-bottom: 3px solid $grey-400;
}

/* Margins, paddings */

@for $i from 0 to length($sizing-map) {
  @each $class, $prop in ('': '', t: '-top', l: '-left', b: '-bottom', r: '-right') {
    .m#{$class}-#{$i} {
      margin#{$prop}: getSizedValue($i) !important;;
    }

    .p#{$class}-#{$i} {
      padding#{$prop}: getSizedValue($i) !important;;
    }

    @include viewport-md {
      .m#{$class}-md-#{$i} {
        margin#{$prop}: getSizedValue($i) !important;;
      }

      .p#{$class}-md-#{$i} {
        padding#{$prop}: getSizedValue($i) !important;
      }
    }
  }
}

.w-2 {
  width: 20% !important;
}

/* Text */

.text-left {
  text-align: left !important;
}

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right !important;
}

.strong {
  font-weight: 700;
}

.uppercase {
  text-transform: uppercase;
}

.text-justify {
  text-align: justify;
  hyphens: auto;
}

/* Displays */

.d-inline-block {
  display: inline-block !important;
}

.d-flex {
  display: flex !important;
}

/* Flex */

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-end {
  justify-content: flex-end;
}

.justify-content-between {
  justify-content: space-between;
}

.align-items-center {
  align-items: center;
}

.flex-auto {
  flex: auto;
}

.flex-fill {
  flex: 1;
}

@for $i from 1 to 5 {
  .order-#{$i} {
    order: $i;
  }
}

@include desktop {
  @for $i from 1 to 5 {
    .order-md-#{$i} {
      order: $i;
    }
  }
}

/* Font sizes */

@for $i from 1 to length($font-size) {
  .size-#{$i} {
    line-height: getFontSize($i) * 1.4;
    font-size: getFontSize($i) !important;
  }
}

.display-section {
  letter-spacing: -1px;
  font-size: getFontSize(9);
  font-weight: 300;
}

/* Shadows */

.shadow-sm {
  box-shadow: $shadow-sm;
}

.shadow {
  box-shadow: $shadow;
}

.shadow-lg {
  box-shadow: $shadow-lg;
}

.text-shadow {
  text-shadow: $shadow;
}

/* Rounded */

.rounded-sm {
  border-radius: $rounded-sm;
}

.rounded {
  border-radius: $rounded;
}

.rounded-lg {
  border-radius: $rounded-lg;
}

.rounded-circle {
  border-radius: $rounded-circle;
}
